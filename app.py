import streamlit as st
import requests
import datetime

from utils.export import export_trip

BASE_URL = "http://localhost:8000"

st.set_page_config(
    page_title="🌍 Wanderly: A Travel Planner Agent",
    page_icon="🌍",
    layout="centered",
    initial_sidebar_state="expanded"
)

st.title("🌍 Wanderly: A Travel Planner Agent")

# --- Sidebar info ---
with st.sidebar:
    st.header("✨ About Wanderly")
    st.markdown(
        """
        Wanderly is your **AI-powered travel planner** 🌍✈️  

        It helps you:
        - Get **real-time weather** info  
        - Discover **attractions & activities**  
        - Estimate **hotel costs**  
        - Handle **currency conversion**  
        - Create a **day-by-day itinerary**  
        - Calculate **total trip expenses**  
        - Generate a **concise summary**  

        💡 *Plan smarter, travel better.*
        """
    )

# --- Initialize chat history ---
if "messages" not in st.session_state:
    st.session_state.messages = []

# --- Display instructions ---
st.header("How can I help you plan a trip? Let me know the place you would like to wander (visit).")

# --- Chat input box ---
with st.form(key="query_form", clear_on_submit=True):
    user_input = st.text_input("User Input", placeholder="Ex: Plan a trip to Montreal for 5 days.")
    submit_button = st.form_submit_button("Wander")

# --- Handle submission ---
if submit_button and user_input.strip():
    try:
        with st.spinner("The agent is wandering..."):
            payload = {"question": user_input}
            response = requests.post(f"{BASE_URL}/query", json=payload)

        if response.status_code == 200:
            answer = response.json().get("answer", "No answer returned")
            markdown_content = f"""# 🌍 Wanderly's Travel Plan
            
            **Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}  
            **Created By:** Wanderly  

            ---

            {answer}

            ---

            *This travel plan was generated by AI. Please verify all information, especially prices, operating hours, and travel requirements before your trip.*
            """

            # Save answer in session state so we can use it later
            st.session_state["last_plan"] = markdown_content

            st.markdown(markdown_content)

        else:
            st.error("Bot failed to respond: " + response.text)

    except Exception as e:
        st.error(f"The response failed due to {e}")

# --- Download button (only visible after response) ---
if "last_plan" in st.session_state:
    if st.download_button(
        label="📥 Download Trip Plan",
        data=st.session_state["last_plan"],
        file_name="wanderly_trip_plan.md",
        mime="text/markdown"
    ):
        st.success("Your travel plan has been downloaded!")
